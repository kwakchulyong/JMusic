package bandMachine;

/* --------------------
* A jMusic tool which returns a chord (using a set
* of probability based rules) given the
* previous chord in the progression
* @author Andrew Troedson
* ---------------------
*/

/*----------------------------
* Chord Progression Engine
*-----------------------------
*/
public final class ChordProgression {

    /**
     * Don't let anyone instantiate this class.
     */
    private ChordProgression() {
    }

    //--------------
    // Class Methods
    //--------------

    public static String[] nextChord(String previousRoot, String previousTonality) {
        String[] chord = nextChord(Integer.parseInt(previousRoot), previousTonality);
        return chord;
    }

    public static String[] nextChord(int previousRoot, String previousTonality) {
        String[] chord = nextChord(previousRoot, previousTonality, "ROCK");
        return chord;
    }

    public static String[] nextChord(String previousRoot, String previousTonality, String style) {
        String[] chord = nextChord(Integer.parseInt(previousRoot), previousTonality, style);
        return chord;
    }

    public static String[] nextChord(int previousRoot, String previousTonality, String style) {

        if(previousTonality == "MIN") {
            previousRoot += 12;
        }

        //set up the probabilities for each scale degree based on the given style
        //scale degree 0-11 are MAJ, and 12-23 are MIN

        int[][] probabilities;

        if(style == "JAZZ") { //"JAZZ" uses chords I IIIb IV V VIIb ii iii v vi
            int[] p0 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p1 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p2 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p3 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p4 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p5 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p6 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p7 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p8 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p9 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p10 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p11 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p12 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p13 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p14 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p15 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p16 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p17 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p18 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p19 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p20 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p21 = { 20, 0, 0, 10, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 15, 0, 15, 0, 0, 5, 0, 10, 0, 0 };
            int[] p22 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p23 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[][] p = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23 };
            probabilities = p;
        }

        else if(style == "SWING") { //"SWING" uses chords IIb IV V VIb i ii iv
            int[] p0 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p1 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p2 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p3 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p4 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p5 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p6 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p7 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p8 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p9 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p10 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p11 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p12 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p13 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p14 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p15 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p16 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p17 = { 0, 5, 0, 0, 0, 20, 0, 10, 5, 0, 0, 0, 20, 0, 10, 0, 0, 5, 0, 0, 0, 0, 0, 0 };
            int[] p18 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p19 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p20 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p21 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p22 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p23 = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[][] p = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23 };
            probabilities = p;
        }

        else { //default = "ROCK" uses chords I II IV V VIIb i ii iv vi
            int[] p0 = { 5, 0, 0, 0, 0, 15, 0, 15, 0, 0, 10, 0, 5, 0, 10, 0, 0, 5, 0, 0, 0, 10, 0, 0 }; //I IV V VIIb i ii iv vi
            int[] p1 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p2 = { 0, 0, 0, 0, 0, 15, 0, 20, 0, 0, 10, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 10, 0, 0 }; //IV V VIIb ii vi
            int[] p3 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p4 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p5 = { 20, 0, 5, 0, 0, 10, 0, 20, 0, 0, 10, 0, 0, 0, 10, 0, 0, 20, 0, 0, 0, 10, 0, 0 }; //I II IV V VIIb ii iv vi
            int[] p6 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p7 = { 20, 0, 5, 0, 0, 15, 0, 10, 0, 0, 5, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 15, 0, 0 }; //I II IV V VIIb ii vi
            int[] p8 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p9 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p10 = { 20, 0, 0, 0, 0, 20, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; //I IV V
            int[] p11 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p12 = { 0, 0, 0, 0, 0, 20, 0, 20, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }; //IV V VIIb
            int[] p13 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p14 = { 20, 0, 5, 0, 0, 15, 0, 20, 0, 0, 5, 0, 0, 0, 10, 0, 0, 5, 0, 0, 0, 10, 0, 0 }; //I II IV V VIIb ii iv vi
            int[] p15 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p16 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p17 = { 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 5, 0, 0 }; //I V VIIb ii vi
            int[] p18 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p19 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p20 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p21 = { 20, 0, 5, 0, 0, 15, 0, 15, 0, 0, 5, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 10, 0, 0 }; //I II IV V VIIb iv vi
            int[] p22 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[] p23 = { 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
            int[][] p = { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23 };
            probabilities = p;
        }

        int root = ProbabilityTest.MakeChoice(probabilities[previousRoot]);
        String tonality;

        if(root <= 11) {
            tonality = "MAJ";
        } else {
            tonality = "MIN";
        }

        root = root % 12;
        String[] chord = { Integer.toString(root), tonality };

        return chord;
    }
}
